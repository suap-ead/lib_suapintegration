# Generated by Django 3.1.2 on 2020-10-26 22:39

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SuapUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                (
                    'is_superuser',
                    models.BooleanField(
                        default=False,
                        help_text='Designates that this user has all permissions without explicitly assigning them.',
                        verbose_name='superuser status'
                    )
                ),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='usuário')),
                ('password', models.CharField(blank=True, max_length=128, null=True, verbose_name='senha')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='nome')),
                ('social_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='social name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='endereço de email')),
                (
                    'scholar_email',
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name='scholar email address'
                    )
                ),
                (
                    'academic_email',
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        verbose_name='academic email address'
                    )
                ),
                ('campus', models.CharField(blank=True, max_length=255, null=True, verbose_name='campus')),
                (
                    'is_staff',
                    models.BooleanField(
                        default=False,
                        help_text='Indica que usuário consegue acessar este site de administração.',
                        verbose_name='membro da equipe'
                    )
                ),
                (
                    'is_active',
                    models.BooleanField(
                        default=True,
                        help_text='Indica que o usuário será tratado como ativo.'
                        ' Ao invés de excluir contas de usuário, desmarque isso.',
                        verbose_name='ativo'
                    )
                ),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('changed_at', models.DateTimeField(auto_now=True, verbose_name='date changed')),
                (
                    'groups',
                    models.ManyToManyField(
                        blank=True,
                        help_text='The groups this user belongs to.'
                        ' A user will get all permissions granted to each of their groups.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Group',
                        verbose_name='groups'
                    )
                ),
                (
                    'user_permissions',
                    models.ManyToManyField(
                        blank=True,
                        help_text='Specific permissions for this user.',
                        related_name='user_set',
                        related_query_name='user',
                        to='auth.Permission',
                        verbose_name='user permissions'
                    )
                ),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Users',
                'ordering': ['name'],
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_at', models.DateTimeField(auto_now_add=True, verbose_name='login at')),
                ('ip', models.CharField(max_length=255, verbose_name='IP')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User login history',
                'verbose_name_plural': 'User logins history',
                'ordering': ['-login_at'],
            },
        ),
    ]
